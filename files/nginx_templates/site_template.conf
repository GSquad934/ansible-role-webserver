server {
    listen 80;

    # Restrict HTTP Methods
    if ($request_method !~ ^(GET|HEAD|POST)$ )
    {
       return 405;
    }

    # Add Security Headers
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;

## Change to the correct Webroot
    root /home/<USERNAME>/public_html;
    index index.php index.html index.htm;

## Apply the proper FQDN
    server_name <HOSTNAME>;

    # Redirect to HTTPS
    return 301 https://$host$request_uri;

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

## It can be another PHP sock file depending on the user running this Website
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }

## Define the correct path and file names
    access_log /home/<USERNAME>/logs/site_access.log;
    error_log /home/<USERNAME>/logs/site_error.log notice;
}

server {
    listen 443 ssl;

    # Restrict HTTP Methods
    if ($request_method !~ ^(GET|HEAD|POST)$ )
    {
       return 405;
    }
   
    # Add Security Headers
    add_header X-Frame-Options "DENY";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

## Change to the correct Webroot   
    root /home/<USERNAME>/public_html;
    index index.php index.html index.htm;

## Define the proper FQDN   
    server_name <HOSTNAME>;
    
    location / {
        try_files $uri $uri/ =404;
    }
    
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

## The sock file can changed depending on the user running the Website
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    
    ssl on;

## Define the proper certificate and key to be used
    ssl_certificate /etc/letsencrypt/live/<HOSTNAME>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<HOSTNAME>/privkey.pem;

## Calculate the correct HPKP settings
    add_header Public-Key-Pins "pin-sha256=\"5dFnCKlZ/f1kn2lXEeyM3E4Tax6NW8fxVfrHmW0n2EI=\"; pin-sha256=\"FSg5faISiQqDCwuVpZlozvI0dzd531GBzxD6ZHU0u2U=\"; max-age=5184000; includeSubDomains";
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_dhparam /etc/ssl/dhparams.pem;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

## Define the correct path and file names
    access_log /home/<USERNAME>/logs/site_ssl__access.log;
    error_log /home/<USERNAME>/logs/site_ssl_error.log notice;
}
